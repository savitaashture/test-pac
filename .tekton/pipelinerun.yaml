---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: another-pr-pac-demo
  annotations:
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-target-branch: "[refs/heads/*]"
    pipelinesascode.tekton.dev/on-comment: "^/backport"
    #pipelinesascode.tekton.dev/on-comment: "savita"
    # pipelinesascode.tekton.dev/on-comment: "hello-world"
    #pipelinesascode.tekton.dev/on-cel-expression: |
      #files.renamed.exists(x, x.matches('components/'))
    # pipelinesascode.tekton.dev/on-target-branch: "[refs/heads/*]" 
    # pipelinesascode.tekton.dev/task: "git-clone"
    # How many runs we want to keep.
    # pipelinesascode.tekton.dev/max-keep-runs: "7"
    # pipelinesascode.tekton.dev/on-cel-expression: | event == "push" && target_branch == "[refs/heads/*]" && "staging/*".pathChanged()
       # event_title.startsWith("Merge pull request") "docs/*.md".pathChanged() "components/?*/base/**".pathChanged()
       # event == "pull_request" && target_branch == "refs/heads/*" && ("**/staging/**".pathChanged())
       # event == "pull_request" && target_branch == "main" && source_branch == "refs/heads/*"  && ("staging/?*/base/**".pathChanged() || "staging/*".pathChanged() || "/staging/**".pathChanged())
       # event == "push" && target_branch == "main" && source_branch == "refs/heads/*"  && ("staging/?*/base/**".pathChanged() || "staging/*".pathChanged() || "*/staging/**".pathChanged())
       # ( target_branch == "refs/heads/*" && event == "push" && ("components/**".pathChanged()) )
    # pipelinesascode.tekton.dev/on-cel-expression: |
      # ( event == "push" && source_branch == "refs/heads/*" ) && "components/?*/base/**".pathChanged()
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: pull_request_number
      value: "{{ pull_request_number }}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      - name: pull_request_number
    tasks:
      - name: noop-task
        taskSpec:
          steps:
            - name: noop-task
              image: alpine
              script: |
                echo "printing all the values here"
                echo {{ trigger_comment }}
                echo {{ pull_request_number }}
                echo {{ repo_url }}
                echo {{ revision }}
                a={{ trigger_comment }}
                value=$(echo "$a" | awk '{print $2}')
                # value=$(echo "$a" | awk -F'[/ ]' '{print $2}')
                git clone {{ repo_url }}
                cd {{ repo_name }}
                git fetch origin pull/{{ pull_request_number }}/head:{{ pull_request_number }}
                git checkout $value
                git merge {{ pull_request_number }}
                git push origin $value
